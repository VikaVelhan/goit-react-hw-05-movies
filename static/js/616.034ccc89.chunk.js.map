{"version":3,"file":"static/js/616.034ccc89.chunk.js","mappings":"qPACA,EAA+B,mCAA/B,EAAsF,wCAAtF,EAAkJ,wCAAlJ,EAAwM,kCAAxM,EAAoP,8B,SCkGpP,EArFqB,WACnB,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,IACRE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAAII,MAAK,SAAAC,GACtBV,EAAaU,EACd,GACF,GAAE,CAACL,IAMJ,OAAKN,GAUH,iBAAKY,UAAWC,EAAhB,WACE,mBAAQC,QAfS,WACnBV,EAASF,EAASa,MAAMC,KACzB,EAakCJ,UAAWC,EAA1C,sBAGA,iBAAKD,UAAWC,EAAhB,WACE,gBAAKI,IAAKC,EAAAA,EAAelB,EAAUmB,YAAaC,IAAI,MACpD,iBAAKR,UAAWC,EAAhB,WACE,0BACGb,EAAUqB,MADb,IAEGrB,EAAUsB,aACPtB,EAAUsB,aAAaC,UAAU,EAAG,GACpC,GAJN,QAOA,wCACe,GACZvB,EAAUwB,aACPC,KAAKC,OAAgC,GAAzB1B,EAAUwB,cAAmBG,QAAQ,GACjD,GAJN,QAOA,sCACA,uBAAI3B,EAAU4B,YACd,oCACA,uBACG5B,EAAU6B,OACP7B,EAAU6B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,IAC/C,YAIV,4BACE,oDACA,2BACE,eAAIrB,UAAWC,EAAf,UACE,SAAC,KAAD,CACEqB,GAAG,OACHnB,MAAO,CAAEC,KAAMd,EAASa,MAAMC,MAC9BJ,UAAWC,EAHb,qBAQF,eAAID,UAAWC,EAAf,UACE,SAAC,KAAD,CACEqB,GAAG,UACHnB,MAAO,CAAEC,KAAMd,EAASa,MAAMC,MAC9BJ,UAAWC,EAHb,2BAUJ,SAAC,KAAD,WA9DF,0BACE,yBACE,SAACsB,EAAA,EAAD,OAgET,C,+LC/FDC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAa,mCAAG,2GAC3BC,EAD2B,oDAE3BC,EAF2B,gCAIRJ,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAAkCF,GAAUG,GAJpC,cAIrB7B,EAJqB,yBAKpBA,EAAK8B,MALe,2CAAH,qDAQbC,EAAiB,mCAAG,WAAOC,EAAOH,GAAd,uFACZJ,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCM,EADtC,+BAEjBH,GAH6B,cACzB7B,EADyB,yBAKxBA,EAAK8B,MALmB,2CAAH,wDAQjBhC,EAAc,mCAAG,WAAOH,GAAP,8FAAWsC,EAAX,+BAA4B,GAAIJ,EAAhC,gCACTJ,EAAAA,EAAAA,IAAA,gBACR9B,GADQ,OACHsC,EADG,oBACuBP,EADvB,mBAEjBG,GAH0B,cACtB7B,EADsB,yBAKrBA,EAAK8B,MALgB,2CAAH,sDAQdI,EAAa,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADQ,cACrB1B,EADqB,yBAIpBA,EAAK8B,KAAKM,MAJU,2CAAH,sDAObC,EAAgB,mCAAG,WAAMF,GAAN,uFACXV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADW,cACxB1B,EADwB,yBAIvBA,EAAK8B,KAAKQ,SAJa,2CAAH,qD,sDCpCtB,IAAM/B,EAAe,iC","sources":["webpack://react-homework-template/./src/pages/MovieDetails.module.css?6cd2","pages/MovieDetails.jsx","services/apiService.js","services/constans.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"MovieDetails\":\"MovieDetails_MovieDetails__Ls9a3\",\"MovieDetails_info\":\"MovieDetails_MovieDetails_info__fPow5\",\"MovieDetails_page\":\"MovieDetails_MovieDetails_page__pjXt5\",\"Button_back\":\"MovieDetails_Button_back__moXm4\",\"Details\":\"MovieDetails_Details__hi2Xw\"};","import { useEffect } from 'react';\nimport { fetchMovieById } from '../services/apiService';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { useState } from 'react';\nimport { BASE_IMG_URL } from 'services/constans';\nimport Loader from '../components/Loader/Loader';\nimport css from './MovieDetails.module.css';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  useEffect(() => {\n    fetchMovieById(id).then(resp => {\n      setMovieData(resp);\n    });\n  }, [id]);\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  if (!movieData) {\n    return (\n      <div>\n        <h1>\n          <Loader />\n        </h1>\n      </div>\n    );\n  }\n  return (\n    <div className={css.MovieDetails_page}>\n      <button onClick={handleGoBack} className={css.Button_back}>\n        Go back\n      </button>\n      <div className={css.MovieDetails}>\n        <img src={BASE_IMG_URL + movieData.poster_path} alt=\"\" />\n        <div className={css.MovieDetails_info}>\n          <h2>\n            {movieData.title}(\n            {movieData.release_date\n              ? movieData.release_date.substring(0, 4)\n              : ''}\n            )\n          </h2>\n          <p>\n            User Score: {''}\n            {movieData.vote_average\n              ? Math.fround(movieData.vote_average * 10).toFixed(0)\n              : ''}\n            %\n          </p>\n          <h3>Overview</h3>\n          <p>{movieData.overview}</p>\n          <h4>Genres</h4>\n          <p>\n            {movieData.genres\n              ? movieData.genres.map(genre => genre.name).join('')\n              : ''}\n          </p>\n        </div>\n      </div>\n      <div>\n        <h4>Additional information</h4>\n        <ul>\n          <li className={css.Details}>\n            <NavLink\n              to=\"cast\"\n              state={{ from: location.state.from }}\n              className={css.Details}\n            >\n              Cast\n            </NavLink>\n          </li>\n          <li className={css.Details}>\n            <NavLink\n              to=\"reviews\"\n              state={{ from: location.state.from }}\n              className={css.Details}\n            >\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '3a0eb1de3b0bf0d77ccee7c23b67ad75';\n\nexport const fetchDayTrend = async (\n  endpoints = `trending/movie/day`,\n  options\n) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchMovieById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["useState","movieData","setMovieData","location","useLocation","navigate","useNavigate","id","useParams","useEffect","fetchMovieById","then","resp","className","css","onClick","state","from","src","BASE_IMG_URL","poster_path","alt","title","release_date","substring","vote_average","Math","fround","toFixed","overview","genres","map","genre","name","join","to","Loader","axios","apiKey","fetchDayTrend","endpoints","options","data","fetchMovieByQuery","query","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo","results"],"sourceRoot":""}