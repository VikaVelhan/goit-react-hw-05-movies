{"version":3,"file":"static/js/884.826c193d.chunk.js","mappings":"wNAkFA,UArEqB,WACnB,OAAkCA,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,IACRE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAeH,GAAII,MAAK,SAAAC,GACtBV,EAAaU,EACd,GACF,GAAE,CAACL,IAMJ,OAAKN,GAUH,4BACE,0CACA,mBAAQY,QAhBS,WACnBR,EAASF,EAASW,MAAMC,KACzB,EAcG,sBACA,gBAAKC,IAAKC,EAAAA,EAAehB,EAAUiB,YAAaC,IAAI,MACpD,0BACGlB,EAAUmB,MADb,IAEGnB,EAAUoB,aAAepB,EAAUoB,aAAaC,UAAU,EAAG,GAAK,GAFrE,QAIA,wCACe,GACZrB,EAAUsB,aACPC,KAAKC,OAAgC,GAAzBxB,EAAUsB,cAAmBG,QAAQ,GACjD,GAJN,QAOA,sCACA,uBAAIzB,EAAU0B,YACd,oCACA,uBACG1B,EAAU2B,OACP3B,EAAU2B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,IAC/C,MAEN,4BACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAASC,GAAG,OAAOnB,MAAO,CAAEC,KAAMZ,EAASW,MAAMC,MAAjD,qBAIF,yBACE,SAAC,KAAD,CAASkB,GAAG,UAAUnB,MAAO,CAAEC,KAAMZ,EAASW,MAAMC,MAApD,2BAMJ,SAAC,KAAD,WA9CF,0BACE,yBACE,SAAC,IAAD,OAgDT,C,+LC9EDmB,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAa,mCAAG,2GAC3BC,EAD2B,oDAE3BC,EAF2B,gCAIRJ,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAAkCF,GAAUG,GAJpC,cAIrB1B,EAJqB,yBAKpBA,EAAK2B,MALe,2CAAH,qDAQbC,EAAiB,mCAAG,WAAOC,EAAOH,GAAd,uFACZJ,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsCM,EADtC,+BAEjBH,GAH6B,cACzB1B,EADyB,yBAKxBA,EAAK2B,MALmB,2CAAH,wDAQjB7B,EAAc,mCAAG,WAAOH,GAAP,8FAAWmC,EAAX,+BAA4B,GAAIJ,EAAhC,gCACTJ,EAAAA,EAAAA,IAAA,gBACR3B,GADQ,OACHmC,EADG,oBACuBP,EADvB,mBAEjBG,GAH0B,cACtB1B,EADsB,yBAKrBA,EAAK2B,MALgB,2CAAH,sDAQdI,EAAa,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADQ,cACrBvB,EADqB,yBAIpBA,EAAK2B,KAAKM,MAJU,2CAAH,sDAObC,EAAgB,mCAAG,WAAMF,GAAN,uFACXV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADW,cACxBvB,EADwB,yBAIvBA,EAAK2B,KAAKQ,SAJa,2CAAH,qD,sDCpCtB,IAAM9B,EAAe,iC","sources":["pages/MovieDetails.jsx","services/apiService.js","services/constans.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { fetchMovieById } from '../services/apiService';\nimport {\n  useParams,\n  NavLink,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { useState } from 'react';\nimport { BASE_IMG_URL } from 'services/constans';\nimport Loader from '../components/Loader/Loader';\n\nconst MovieDetails = () => {\n  const [movieData, setMovieData] = useState(null);\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { id } = useParams();\n  useEffect(() => {\n    fetchMovieById(id).then(resp => {\n      setMovieData(resp);\n    });\n  }, [id]);\n\n  const handleGoBack = () => {\n    navigate(location.state.from);\n  };\n\n  if (!movieData) {\n    return (\n      <div>\n        <h1>\n          <Loader />\n        </h1>\n      </div>\n    );\n  }\n  return (\n    <div>\n      <h1>MovieDetails</h1>\n      <button onClick={handleGoBack}>Go back</button>\n      <img src={BASE_IMG_URL + movieData.poster_path} alt=\"\" />\n      <h2>\n        {movieData.title}(\n        {movieData.release_date ? movieData.release_date.substring(0, 4) : ''})\n      </h2>\n      <p>\n        User Score: {''}\n        {movieData.vote_average\n          ? Math.fround(movieData.vote_average * 10).toFixed(0)\n          : ''}\n        %\n      </p>\n      <h3>Overview</h3>\n      <p>{movieData.overview}</p>\n      <h4>Genres</h4>\n      <p>\n        {movieData.genres\n          ? movieData.genres.map(genre => genre.name).join('')\n          : ''}\n      </p>\n      <div>\n        <h4>Additional information</h4>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" state={{ from: location.state.from }}>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={{ from: location.state.from }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n\n        <Outlet />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '3a0eb1de3b0bf0d77ccee7c23b67ad75';\n\nexport const fetchDayTrend = async (\n  endpoints = `trending/movie/day`,\n  options\n) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchMovieById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n","export const BASE_IMG_URL = 'https://image.tmdb.org/t/p/w400';\n"],"names":["useState","movieData","setMovieData","location","useLocation","navigate","useNavigate","id","useParams","useEffect","fetchMovieById","then","resp","onClick","state","from","src","BASE_IMG_URL","poster_path","alt","title","release_date","substring","vote_average","Math","fround","toFixed","overview","genres","map","genre","name","join","to","axios","apiKey","fetchDayTrend","endpoints","options","data","fetchMovieByQuery","query","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo","results"],"sourceRoot":""}