{"version":3,"file":"static/js/530.ae6a1207.chunk.js","mappings":"oKAsBA,IAlBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,SACGG,EAAMK,SAFFL,EAAME,GADA,KAStB,C,gKChBD,EAA8B,4BAA9B,EAA0E,8BAA1E,EAAuH,6B,SC8DvH,EAvDe,WACb,OAA0BI,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAea,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcF,EAAaG,IAAI,UAMrCC,EAAAA,EAAAA,YAAU,WACHF,IAGL,iBAAC,gHAE6BG,EAAAA,EAAAA,IAAkBH,GAF/C,mBAEWI,EAFX,EAEWA,QACRR,EAAUQ,GACa,IAAnBA,EAAQC,OAJf,uBAKKC,IAAAA,OAAAA,QAAwB,gCAL7B,4EAUGC,QAAQC,IAAR,MAVH,yBAYGb,EAASK,GAZZ,4EAAD,EAeD,GAAE,CAACA,IAOJ,OACE,4BACE,kBAAMS,SAPW,SAAAC,GACnBA,EAAEC,iBACFZ,EAAgB,CAAEL,MAAAA,GACnB,EAIiCkB,UAAWC,EAAzC,WACE,kBACEC,KAAK,OACLC,MAAOrB,EACPsB,SApCa,SAAC,GAA2B,IAAfD,EAAc,EAAxBE,OAAUF,MAChCpB,EAASoB,EACV,EAmCOH,UAAWC,KAEb,mBAAQC,KAAK,SAASF,UAAWC,EAAjC,wBAIF,SAACK,EAAA,EAAD,CAAYnC,OAAQA,MAGzB,C,+LC3DDoC,EAAAA,EAAAA,SAAAA,QAAyB,gCACzB,IAAMC,EAAS,mCAEFC,EAAa,mCAAG,2GAC3BC,EAD2B,oDAE3BC,EAF2B,gCAIRJ,EAAAA,EAAAA,IAAA,UAAaG,EAAb,oBAAkCF,GAAUG,GAJpC,cAIrBC,EAJqB,yBAKpBA,EAAKC,MALe,2CAAH,qDAQbtB,EAAiB,mCAAG,WAAOT,EAAO6B,GAAd,uFACZJ,EAAAA,EAAAA,IAAA,+BACOC,EADP,iCACsC1B,EADtC,+BAEjB6B,GAH6B,cACzBC,EADyB,yBAKxBA,EAAKC,MALmB,2CAAH,wDAQjBC,EAAc,mCAAG,WAAOrC,GAAP,8FAAWsC,EAAX,+BAA4B,GAAIJ,EAAhC,gCACTJ,EAAAA,EAAAA,IAAA,gBACR9B,GADQ,OACHsC,EADG,oBACuBP,EADvB,mBAEjBG,GAH0B,cACtBC,EADsB,yBAKrBA,EAAKC,MALgB,2CAAH,sDAQdG,EAAa,mCAAG,WAAMC,GAAN,uFACRV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADQ,cACrBI,EADqB,yBAIpBA,EAAKC,KAAKK,MAJU,2CAAH,sDAObC,EAAgB,mCAAG,WAAMF,GAAN,uFACXV,EAAAA,EAAAA,IAAA,gBACRU,EADQ,4BACmBT,EADnB,oBADW,cACxBI,EADwB,yBAIvBA,EAAKC,KAAKrB,SAJa,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","webpack://react-homework-template/./src/pages/Movies.module.css?d157","pages/Movies.jsx","services/apiService.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\n\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </NavLink>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.array,\n};\nexport default MoviesList;\n","// extracted by mini-css-extract-plugin\nexport default {\"Form_search\":\"Movies_Form_search__fJwhW\",\"Button_search\":\"Movies_Button_search__NJZSR\",\"Input_search\":\"Movies_Input_search__eVYD1\"};","import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchMovieByQuery } from '../services/apiService';\nimport MoviesList from '../components/MoviesList/MoviesList';\nimport Notiflix from 'notiflix';\nimport css from './Movies.module.css';\n\nconst Movies = () => {\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n\n  const handleChange = ({ target: { value } }) => {\n    setQuery(value);\n  };\n\n  useEffect(() => {\n    if (!searchQuery) {\n      return;\n    }\n    (async () => {\n      try {\n        const { results } = await fetchMovieByQuery(searchQuery);\n        setMovies(results);\n        if (results.length === 0) {\n          Notiflix.Notify.failure('Please, enter a valid value.');\n\n          return;\n        }\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setQuery(searchQuery);\n      }\n    })();\n  }, [searchQuery]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setSearchParams({ query });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} className={css.Form_search}>\n        <input\n          type=\"text\"\n          value={query}\n          onChange={handleChange}\n          className={css.Input_search}\n        />\n        <button type=\"submit\" className={css.Button_search}>\n          Search\n        </button>\n      </form>\n      <MoviesList movies={movies} />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst apiKey = '3a0eb1de3b0bf0d77ccee7c23b67ad75';\n\nexport const fetchDayTrend = async (\n  endpoints = `trending/movie/day`,\n  options\n) => {\n  const resp = await axios.get(`${endpoints}?api_key=${apiKey}`, options);\n  return resp.data;\n};\n\nexport const fetchMovieByQuery = async (query, options) => {\n  const resp = await axios.get(\n    `search/movie?api_key=${apiKey}&language=en-US&query=${query}&page=1&include_adult=false`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchMovieById = async (id, detailEndpoint = '', options) => {\n  const resp = await axios.get(\n    `movie/${id}${detailEndpoint}?api_key=${apiKey}&language=en-US`,\n    options\n  );\n  return resp.data;\n};\n\nexport const fetchCastInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/credits?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.cast;\n};\n\nexport const fetchReviewsInfo = async movieId => {\n  const resp = await axios.get(\n    `movie/${movieId}/reviews?api_key=${apiKey}&language=en-US`\n  );\n  return resp.data.results;\n};\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","useState","query","setQuery","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchMovieByQuery","results","length","Notiflix","console","log","onSubmit","e","preventDefault","className","css","type","value","onChange","target","MoviesList","axios","apiKey","fetchDayTrend","endpoints","options","resp","data","fetchMovieById","detailEndpoint","fetchCastInfo","movieId","cast","fetchReviewsInfo"],"sourceRoot":""}